OrderController_create_001: !!com.eh.frog.core.model.PrepareData
  desc: 成功创建订单，优惠开关打开
  args:
    - desc: 创建订单入参
      object: !!com.eh.frog.sample.orm.bean.Order { buyerId: 1025229, gmtCreate: null, gmtModified: null, id: null, isValid: null,
                        orderAmount: 225.25, orderId: null, orderStatus: null, orderTime: '2021-10-08 14:37:10' }
  depDataSet:
    - tableName: tbl_user
      tableBaseDesc: 用户表
      tableData:
        - { user_id: 1025229, user_name: 武松, gmt_modified: '2021-09-08 18:00:00' }
  expectDataSet:
    - tableName: tbl_user
      tableBaseDesc: 用户表
      flags: { }
      tableData:
        - { user_name: 武松, user_id: 1025229 }
    - tableName: tbl_order
      tableBaseDesc: 订单表
      flags: { gmt_create: D200 }
      tableData:
        - { order_amount: 220.25, order_time: '2021-10-08 14:37:10', order_status: 1, buyer_id: 1025229, is_valid: 1, gmt_create: today }
  expectEventSet:
    - desc: 订单创建成功消息
      flags: { com.eh.frog.sample.mq.model.OrderEventMessage: {orderId: L1, orderTime: D5, coupon: Y},
               com.eh.frog.sample.rpc.response.Coupon: {userId: Y, couponId: Y, couponAmount: Y}}
      msgClass: com.eh.frog.sample.mq.model.OrderEventMessage
      objects:
        - !!com.eh.frog.sample.mq.model.OrderEventMessage { eventType: CREATE, orderAmount: 220.25, orderId: 123, orderTime: 2021-10-08 14:37:08,
                coupon: {couponAmount: 5.00, couponId: 9999, userId: 1025229} }
  expectResult:
    desc: 入参1
    object: !!com.eh.frog.sample.base.Response { data: true, error: '200', msg: 服务调用成功, status: 1 }
  virtualMockSet:
    - desc: mock第三方服务
      container: com.eh.frog.sample.controller.OrderController
      defaultObj: !!com.eh.frog.sample.rpc.response.Coupon { userId: 1025229, couponId: 9999, couponAmount: 5.00 }
      target: com.eh.frog.sample.rpc.virtual.CouponRpcService#getCoupon(java.lang.Long, java.math.BigDecimal, com.eh.frog.sample.rpc.virtual.CouponReq)
  virtualConfigSet:
    - desc: mock第三方服务
      container: com.eh.frog.sample.lion.OrderLionConfig
      configField: bizSwitch
      configValue: true


OrderController_create_002: !!com.eh.frog.core.model.PrepareData
  desc: 成功创建订单，优惠开关关闭
  args:
    - desc: 创建订单入参
      object: !!com.eh.frog.sample.orm.bean.Order { buyerId: 1025229, gmtCreate: null, gmtModified: null,
                    id: null, isValid: null, orderAmount: 225.25, orderId: null,
                    orderStatus: null, orderTime: '2021-10-08 14:37:10' }
  depDataSet:
    - tableName: tbl_user
      tableBaseDesc: 用户表
      tableData:
        - { user_id: 1025229, user_name: 武松, gmt_modified: '2021-09-08 18:00:00' }
  expectDataSet:
    - tableName: tbl_user
      tableBaseDesc: 用户表
      flags: { }
      tableData:
        - { user_name: 武松, user_id: 1025229 }
    - tableName: tbl_order
      tableBaseDesc: 订单表
      flags: { gmt_create: D200, order_time: Y }
      tableData:
        - { order_amount: 225.25, order_time: '2021-10-08 14:37:10', order_status: 1, buyer_id: 1025229, is_valid: 1, gmt_create: today }
  expectEventSet:
    - desc: 订单创建成功消息
      flags: { com.eh.frog.sample.mq.model.OrderEventMessage: {orderId: L1, orderTime: D5} }
      msgClass: com.eh.frog.sample.mq.model.OrderEventMessage
      objects:
        - !!com.eh.frog.sample.mq.model.OrderEventMessage { eventType: CREATE, orderAmount: 225.25, orderId: 123, orderTime: 2021-10-08 14:37:08 }
  expectResult:
    desc: 入参1
    object: !!com.eh.frog.sample.base.Response { data: true, error: '200', msg: 服务调用成功, status: 1 }
  virtualMockSet:
    - desc: mock第三方服务
      container: com.eh.frog.sample.controller.OrderController
      defaultObj: !!com.eh.frog.sample.rpc.response.Coupon { userId: 1025229, couponId: 9999, couponAmount: 5.00 }
      target: com.eh.frog.sample.rpc.virtual.CouponRpcService#getCoupon(java.lang.Long, java.math.BigDecimal, com.eh.frog.sample.rpc.virtual.CouponReq)
  virtualConfigSet:
    - desc: mock第三方服务
      container: com.eh.frog.sample.lion.OrderLionConfig
      configField: bizSwitch
      configValue: false

OrderController_create_003: !!com.eh.frog.core.model.PrepareData
  desc: 成功创建订单，优惠开关关闭,使用redis插件
  args:
    - desc: 创建订单入参
      object: !!com.eh.frog.sample.orm.bean.Order { buyerId: 1025229, gmtCreate: null, gmtModified: null,
                                                    id: null, isValid: null, orderAmount: 225.25, orderId: null,
                                                    orderStatus: null, orderTime: '2021-10-08 14:37:10' }
  depDataSet:
    - tableName: tbl_user
      tableBaseDesc: 用户表
      tableData:
        - { user_id: 1025229, user_name: 武松, gmt_modified: '2021-09-08 18:00:00' }
  expectDataSet:
    - tableName: tbl_user
      tableBaseDesc: 用户表
      flags: { }
      tableData:
        - { user_name: 武松, user_id: 1025229 }
    - tableName: tbl_order
      tableBaseDesc: 订单表
      flags: { gmt_create: D200 }
      tableData:
        - { order_amount: 225.25, order_time: '2021-10-08 14:37:10', order_status: 1, buyer_id: 1025229, is_valid: 1, gmt_create: today }
  expectEventSet:
    - desc: 订单创建成功消息
      flags: { com.eh.frog.sample.mq.model.OrderEventMessage: { orderId: L1, orderTime: D5 } }
      msgClass: com.eh.frog.sample.mq.model.OrderEventMessage
      objects:
        - !!com.eh.frog.sample.mq.model.OrderEventMessage { eventType: CREATE, orderAmount: 225.25, orderId: 123, orderTime: 2021-10-08 14:37:08 }
  expectResult:
    desc: 入参1
    object: !!com.eh.frog.sample.base.Response { data: true, error: '200', msg: 服务调用成功, status: 1 }
  virtualMockSet:
    - desc: mock第三方服务
      container: com.eh.frog.sample.controller.OrderController
      defaultObj: !!com.eh.frog.sample.rpc.response.Coupon { userId: 1025229, couponId: 9999, couponAmount: 5.00 }
      target: com.eh.frog.sample.rpc.virtual.CouponRpcService#getCoupon(java.lang.Long, java.math.BigDecimal, com.eh.frog.sample.rpc.virtual.CouponReq)
  virtualConfigSet:
    - desc: mock第三方服务
      container: com.eh.frog.sample.lion.OrderLionConfig
      configField: bizSwitch
      configValue: false
  extendParams:
    frog-cluster-redis-plugin: !!com.eh.frog.plugin.redis.model.RedisPluginPrepareData
      deptRedisData:
        - { expire: 300, key: lock-1025229, microSecond: false, value: '123' }
      expectRedisData:
        - { key: lock-1025229, value: '123' }


OrderController_create_004: !!com.eh.frog.core.model.PrepareData
  desc: T成功创建订单，优惠开关打开,使用redis插件，测试mock服务对不同输入有不同返回,当buyerId是1025229时，优惠金额是10元，其他情况是5元，需要使用whenObject
  args:
    - desc: 创建订单入参
      object: !!com.eh.frog.sample.orm.bean.Order { buyerId: 1025229, gmtCreate: null, gmtModified: null,
                                                    id: null, isValid: null, orderAmount: 225.25, orderId: null,
                                                    orderStatus: null, orderTime: '2021-10-08 14:37:10' }
  depDataSet:
    - tableName: tbl_user
      tableBaseDesc: 用户表
      tableData:
        - { user_id: 1025229, user_name: 武松, gmt_modified: '2021-09-08 18:00:00' }
  expectDataSet:
    - tableName: tbl_user
      tableBaseDesc: 用户表
      flags: { }
      tableData:
        - { user_name: 武松, user_id: 1025229 }
    - tableName: tbl_order
      tableBaseDesc: 订单表
      flags: { gmt_create: D200 }
      tableData:
        - { order_amount: 220.25, order_time: '2021-10-08 14:37:10', order_status: 1, buyer_id: 1025229, is_valid: 1, gmt_create: today }
  expectEventSet:
    - desc: 订单创建成功消息
      flags: { com.eh.frog.sample.mq.model.OrderEventMessage: { orderId: L1, orderTime: D5, coupon: Y } ,
               com.eh.frog.sample.rpc.response.Coupon: {userId: Y}}
      msgClass: com.eh.frog.sample.mq.model.OrderEventMessage
      objects:
        - !!com.eh.frog.sample.mq.model.OrderEventMessage { eventType: CREATE, orderAmount: 220.25, orderId: 123, orderTime: 2021-10-08 14:37:08,
              coupon: !!com.eh.frog.sample.rpc.response.Coupon { userId: 1025229, couponId: 9999, couponAmount: 5.00 }}
  expectResult:
    desc: 入参1
    object: !!com.eh.frog.sample.base.Response { data: true, error: '200', msg: 服务调用成功, status: 1 }
  virtualMockSet:
    - desc: mock第三方服务
      container: com.eh.frog.sample.controller.OrderController
      target: com.eh.frog.sample.rpc.virtual.CouponRpcService#getCoupon(java.lang.Long, java.math.BigDecimal, com.eh.frog.sample.rpc.virtual.CouponReq)
      defaultObj: !!com.eh.frog.sample.rpc.response.Coupon { userId: 1025229, couponId: 9999, couponAmount: 5.00 }
      mockUnits:
        - when: '#args[2].strType eq "aaa"'
          thenReturn: !!com.eh.frog.sample.rpc.response.Coupon { userId: 1025229, couponId: 9999, couponAmount: 10.00 }
        - when: '#args[0] eq 1025229 and #args[2].strType eq "bbb"'
          thenReturn: !!com.eh.frog.sample.rpc.response.Coupon { userId: 1025229, couponId: 9999, couponAmount: 5.00 }
  virtualConfigSet:
    - desc: mock第三方服务
      container: com.eh.frog.sample.lion.OrderLionConfig
      configField: bizSwitch
      configValue: true
  extendParams:
    frog-cluster-redis-plugin: !!com.eh.frog.plugin.redis.model.RedisPluginPrepareData
      deptRedisData:
        - { expire: 300, key: lock-1025229, microSecond: false, value: '123' }
      expectRedisData:
        - { key: lock-1025229, value: '123' }